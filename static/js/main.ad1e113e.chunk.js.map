{"version":3,"sources":["components/GameOverMessage/GameOverMessage.module.css","components/NavBar/NavButtons/AddPlayer/AddPlayer.module.css","components/DartBoardStatic/PlayersBox/PlayersBox.module.css","components/Checkbox/Checkbox.module.css","App.module.css","serviceWorker.js","components/GameOverMessage/GameOverMessage.js","components/NavBar/Nav.js","img/darts2.png","containers/Header.js","audioclips/arrow.wav","store/actions/actionTypes.js","store/actions/actions.js","components/DartBoardStatic/DartBoardItem/DartBoardItem.js","audioclips/addplayers.wav","audioclips/notification_ambient.wav","components/NavBar/NavButtons/AddPlayer/AddPlayer.js","components/DartBoardStatic/PlayersBox/PlayersBox.js","components/DartBoardStatic/DartBoardStatic.js","audioclips/navigation_transition-right.wav","audioclips/ui_loading.wav","components/DartBoardPlayers/TotalScore.js","audioclips/notification_simple-01.wav","audioclips/notification_high-intensity.wav","audioclips/hero_decorative-celebration-01.wav","components/DartBoardPlayers/DartBoardPlayer/DartBoardPlayerControl/DartBoardPlayerControl.js","components/DartBoardPlayers/DartBoardPlayer/DartBoardPlayer.js","components/Rules.js","components/RulesSidebar.js","audioclips/undo.wav","components/NavBar/NavButtons/UndoMove.js","components/NavBar/NavButtons/ResetBoard.js","audioclips/randomize.wav","components/DartBoardPlayers/DartActions.js","components/DartBoardPlayers/DartBoardPlayers.js","containers/DartBoard.js","components/Checkbox/Checkbox.js","App.js","store/reducers/dartBoard.js","index.js","components/DartBoardPlayers/DartBoardPlayer/DartBoardPlayerControl/DartBoardPlayerControl.module.css","components/DartBoardPlayers/DartBoardPlayers.module.css","components/DartBoardPlayers/DartBoardPlayer/DartBoardPlayer.module.css","components/DartBoardStatic/DartBoardItem/DartBoardItem.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","GameOverMessage","props","useState","open","setOpen","winningPlayerIndex","setWinnningPlayerIndex","winningPlayerName","setWinnningPlayerName","isExploding","setIsExploding","useSelector","state","name","players","handleOpen","handleClose","className","classes","newGame","floorHeight","Dialog","onClose","DialogTitle","id","DialogActions","Button","onClick","color","style","backgroundColor","Nav","Header","src","dartImg","alt","Component","ADD_PLAYER","REMOVE_PLAYER","UPDATE_SCORE","UPDATE_POINTS","RESET_SCORES","RESET_BOARD","UNDO_MOVE","MODIFY_LABELS","RANDOMIZE_LABELS","RANDOMIZE_PLAYERS_ORDER","TOGGLE_MUTE","undoMove","playerIndex","scoreIndex","type","actionTypes","connect","history","muted","targets","dispatch","onModifyLabels","labelIndex","operation","modifyLabels","resetAudio","Audio","reset","playSound","audioFile","play","numbers","target","DartBoardItem","isClosed","targetClosed","onPlayerAdded","addPlayer","setName","hasScored","setHasScored","useEffect","length","forEach","player","score","mark","addPlayerHandler","addplayersAudio","addplayerAudio","addplayer","addplayers","Tooltip","title","placement","alert","DialogContent","DialogContentText","TextField","onKeyPress","ev","key","preventDefault","inputProps","maxLength","autoFocus","margin","fullWidth","error","helperText","InputProps","startAdornment","InputAdornment","position","onChange","e","value","disabled","PlayersBox","map","i","playerInfo","actions","onRemovePlayer","removePlayer","removeAudio","remove","DartBoardPlayerControl","fontSize","points","IconButton","removeCircle","size","rank","likeAudio","like","warningAudio","warning","successAudio","success","hasClosedTarget","scoreArr","push","reduce","a","b","onUpdatePoints","onUpdateScore","circle","slash","close","cursor","complete","bonusIcon","updateScore","updatePoints","onUndoMove","setRank","handleUpdateScore","handleUpdatePoints","slice","scores","currentPlayerScore","currentPlayerPoints","sort","j","every","currentValue","some","el","width","dartBoardPlayer","num","totalScore","Rules","RulesSidebar","setState","right","child","anchor","padding","role","marginTop","display","justifyContent","toggleDrawer","event","item","SwipeableDrawer","onOpen","randomizeAudio","randomize","onResetBoard","onRandomizePlayers","onRandomizeLabels","canRandomize","setCanRandomize","randomizePlayers","UndoMove","randomizeTargets","randomizeButton","dartBoardPlayers","withStyles","root","border","boxShadow","p","Grid","xs","container","spacing","DartBoardPlayers","transition","opacity","bottom","textDecoration","fontFamily","href","rel","onToggleMute","checkbox","checked","theme","createTheme","palette","primary","light","main","dark","contrastText","secondary","typography","useNextVariants","App","StylesProvider","injectFirst","DartBoardContainer","DartBoard","initialState","pointsHistory","reducer","record","action","max","min","randomOrder","Math","floor","random","shuffledPlayers","newIndex","generateRandom","exclude","x","indexOf","newTarget","finalArr","label","filter","_","maxNum","indexArr","getOccurrence","array","count","v","val","playerHasScored","allPlayersPointsArr","hit","pop","pointsRecord","lastTarget","pointTotal","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","dartBoardReducer","applyMiddleware","thunk","app","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.ad1e113e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"newGame\":\"GameOverMessage_newGame__13eT9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addPlayer\":\"AddPlayer_addPlayer__1zfOC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PlayersBox\":\"PlayersBox_PlayersBox__1Sp7R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"Checkbox_checkbox__21stL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DartBoardContainer\":\"App_DartBoardContainer__2vjst\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport classes from './GameOverMessage.module.css';\r\nimport ConfettiExplosion from 'react-confetti-explosion';\r\n\r\nconst GameOverMessage = (props) => {\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [winningPlayerIndex, setWinnningPlayerIndex] = useState(-1);\r\n    const [winningPlayerName, setWinnningPlayerName] = useState('');\r\n    const [isExploding, setIsExploding] = useState(false);\r\n\r\n    useSelector(state => {\r\n        if (state.winningPlayerIndex > -1 && winningPlayerIndex === -1) {\r\n            setWinnningPlayerIndex(state.winningPlayerIndex);\r\n\r\n            const name = state.players[state.winningPlayerIndex].name;\r\n            setWinnningPlayerName(name);\r\n\r\n            handleOpen();\r\n\r\n        } else if (state.winningPlayerIndex !== winningPlayerIndex) {\r\n            setWinnningPlayerIndex(state.winningPlayerIndex);\r\n        }\r\n    });\r\n\r\n    const handleOpen = () => {\r\n        setIsExploding(true);\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setIsExploding(false);\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.newGame}>\r\n            {isExploding && <ConfettiExplosion floorHeight='2000' />}\r\n            <Dialog\r\n                // disableBackdropClick={true}\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {`${winningPlayerName} wins the game!! 🏆`}\r\n                </DialogTitle>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"secondary\" style={{ backgroundColor: 'rgb(219, 32, 32)' }}>\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameOverMessage;","import React from 'react';\r\n\r\nimport GameOverMessage from '../GameOverMessage/GameOverMessage';\r\n\r\nconst Nav = () => {\r\n\r\n    return (\r\n      <div className=\"Nav-container\">\r\n          <GameOverMessage />\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Nav;","export default __webpack_public_path__ + \"static/media/darts2.f52d0a57.png\";","import React, { Component } from 'react';\r\n\r\nimport Nav from '../components/NavBar/Nav';\r\nimport dartImg from '../img/darts2.png';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Header-container\">\r\n        <div>\r\n          <div className=\"Header-title-line-container\">\r\n            <div className=\"Header-title theme-color-1\">\r\n              <span>Cricket</span>\r\n              <img src={dartImg} alt=\"3 darts pointing downward\" />\r\n              <span>Tracker</span>\r\n            </div>\r\n          </div>\r\n          <Nav />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/arrow.204f5440.wav\";","export const ADD_PLAYER = 'ADD_PLAYER';\r\nexport const ADD_SCORE = 'ADD_SCORE';\r\nexport const REMOVE_PLAYER = 'REMOVE_PLAYER';\r\nexport const UPDATE_SCORE = 'UPDATE_SCORE';\r\nexport const UPDATE_POINTS = 'UPDATE_POINTS';\r\nexport const RESET_SCORES = 'RESET_SCORES';\r\nexport const RESET_BOARD = 'RESET_BOARD';\r\nexport const UNDO_MOVE = 'UNDO_MOVE';\r\nexport const MODIFY_LABELS = 'MODIFY_LABELS';\r\nexport const RANDOMIZE_LABELS = 'RANDOMIZE_LABELS';\r\nexport const RANDOMIZE_PLAYERS_ORDER = 'RANDOMIZE_PLAYERS_ORDER';\r\nexport const TOGGLE_MUTE = 'TOGGLE_MUTE';\r\n\r\n","import * as actionTypes from './actionTypes';\r\n\r\nexport const addPlayer = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_PLAYER,\r\n        name\r\n    };\r\n};\r\n\r\nexport const removePlayer = (playerIndex) => {\r\n    return {\r\n        type: actionTypes.REMOVE_PLAYER,\r\n        playerIndex,\r\n    };\r\n};\r\n\r\nexport const updateScore = (playerIndex, scoreIndex) => {\r\n    return {\r\n        type: actionTypes.UPDATE_SCORE,\r\n        playerIndex,\r\n        scoreIndex\r\n    };\r\n};\r\n\r\nexport const updatePoints = (playerIndex, scoreIndex) => {\r\n    return {\r\n        type: actionTypes.UPDATE_POINTS,\r\n        playerIndex,\r\n        scoreIndex\r\n    };\r\n};\r\n\r\nexport const undoMove = (playerIndex, scoreIndex) => {\r\n    return {\r\n        type: actionTypes.UNDO_MOVE,\r\n        playerIndex,\r\n        scoreIndex\r\n    };\r\n};\r\n\r\nexport const resetBoard = () => {\r\n    return {\r\n        type: actionTypes.RESET_BOARD\r\n    };\r\n};\r\n\r\nexport const resetScores = () => {\r\n    return {\r\n        type: actionTypes.RESET_SCORES\r\n    };\r\n};\r\n\r\nexport const modifyLabels = (labelIndex, operation) => {\r\n    return {\r\n        type: actionTypes.MODIFY_LABELS,\r\n        labelIndex,\r\n        operation\r\n    };\r\n};\r\n\r\nexport const randomizeLabels = () => {\r\n    return {\r\n        type: actionTypes.RANDOMIZE_LABELS\r\n    };\r\n};\r\n\r\nexport const randomizePlayersOrder = () => {\r\n    return {\r\n        type: actionTypes.RANDOMIZE_PLAYERS_ORDER\r\n    };\r\n};\r\n\r\nexport const toggleMute = () => {\r\n    return {\r\n        type: actionTypes.TOGGLE_MUTE\r\n    };\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport ArrowLeftTwoToneIcon from '@material-ui/icons/ArrowLeftTwoTone';\r\nimport ArrowRightTwoToneIcon from '@material-ui/icons/ArrowRightTwoTone';\r\nimport reset from '../../../audioclips/arrow.wav';\r\nimport { modifyLabels } from '../../../store/actions/actions';\r\nimport classes from './DartBoardItem.module.css';\r\n\r\nconst DartBoardItem = (props) => {\r\n\r\n    const incrementLabelHandler = () => {\r\n        playSound(resetAudio);\r\n        props.onModifyLabels(props.labelIndex, 'increment');\r\n    }\r\n\r\n    const decrementLabelHandler = () => {\r\n        playSound(resetAudio);\r\n        props.onModifyLabels(props.labelIndex, 'decrement');\r\n    }\r\n\r\n    const resetAudio = new Audio(reset);\r\n\r\n    const playSound = audioFile => {\r\n        if (!props.muted) audioFile.play();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.numbers}>\r\n                {props.target !== 25 &&\r\n                    <ArrowLeftTwoToneIcon\r\n                        className={classes.DartBoardItem}\r\n                        onClick={decrementLabelHandler} />}\r\n                {props.target}\r\n                {props.target !== 25 &&\r\n                    <ArrowRightTwoToneIcon\r\n                        className={classes.DartBoardItem}\r\n                        onClick={incrementLabelHandler} />}\r\n                {props.isClosed === true &&\r\n                    <span className={classes.targetClosed}>closed</span>}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        history: state.history,\r\n        muted: state.muted,\r\n        targets: state.targets\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onModifyLabels: (labelIndex, operation) => dispatch(modifyLabels(labelIndex, operation))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DartBoardItem);","export default __webpack_public_path__ + \"static/media/addplayers.ed804bd1.wav\";","export default __webpack_public_path__ + \"static/media/notification_ambient.c0103172.wav\";","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { addPlayer } from '../../../../store/actions/actions';\r\nimport Button from '@material-ui/core/Button';\r\nimport PersonAddSharpIcon from '@material-ui/icons/PersonAddSharp';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport classes from './AddPlayer.module.css';\r\nimport addplayer from '../../../../audioclips/addplayers.wav';\r\nimport addplayers from '../../../../audioclips/notification_ambient.wav';\r\n\r\nconst AddPlayer = (props) => {\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [name, setName] = useState('');\r\n    const [nameArr, setNameArr] = useState([]);\r\n    const [hasScored, setHasScored] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (props.players.length > 0) {\r\n            setHasScored(false);\r\n            props.players.forEach(player => {\r\n                player.score.forEach(mark => {\r\n                    if (mark > 0) {\r\n                        setHasScored(true)\r\n                    }\r\n                })\r\n            })\r\n        }\r\n\r\n    }, [props.players, hasScored])\r\n\r\n    const handleClickOpen = () => {\r\n        if (props.players.length > 5) { return; }\r\n        if (hasScored === true) {\r\n            alert('You have already started the game, please reset the game by selecting \"New Game\" if you wish to add more players');\r\n        } else {\r\n            playSound(addplayerAudio);\r\n            setOpen(true);\r\n        }\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.players.forEach(player => {\r\n            if (name === player.name) {\r\n                setName('wxyz')\r\n            };\r\n\r\n        })\r\n    }, [name, props.players])\r\n\r\n    const addPlayerHandler = () => {\r\n        if (name === '') return;\r\n        playSound(addplayersAudio);\r\n        props.onPlayerAdded(name) && setOpen(false);\r\n        setName('')\r\n    }\r\n\r\n    const addplayerAudio = new Audio(addplayer);\r\n    const addplayersAudio = new Audio(addplayers);\r\n\r\n    const playSound = audioFile => {\r\n        if (!props.muted) audioFile.play();\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <Tooltip title=\"Add up to 6 Players or teams\" placement=\"right\">\r\n                < PersonAddSharpIcon className={classes.addPlayer} onClick={handleClickOpen} />\r\n            </Tooltip>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"Name\"}</DialogTitle>\r\n                <DialogContent >\r\n                    <DialogContentText>\r\n                        Please Enter Your Name\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        onKeyPress={(ev) => {\r\n                            if (ev.key === 'Enter') {\r\n                                addPlayerHandler();\r\n                                ev.preventDefault();\r\n                            }\r\n                        }}\r\n\r\n                        inputProps={{ maxLength: 9 }}\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        type=\"string\"\r\n                        fullWidth\r\n                        error={name === \"wxyz\"}\r\n                        helperText={name === \"xyz\" ? 'This name has already been selected' : ' '}\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <AccountCircle />\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                        onChange={e => setName(e.target.value)}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        disabled={name === '' || name === 'wxyz'}\r\n                        style={{ backgroundColor: '#00fff8de' }} onClick={addPlayerHandler}>\r\n                        Yeah!\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        players: state.players,\r\n        muted: state.muted\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onPlayerAdded: (name) => dispatch(addPlayer(name))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPlayer);","import React from 'react';\r\n\r\nimport AddPlayer from '../../NavBar/NavButtons/AddPlayer/AddPlayer';\r\nimport classes from './PlayersBox.module.css';\r\n\r\nconst PlayersBox = props => {\r\n\r\n    return(  \r\n            <div className={classes.PlayersBox}>\r\n                <AddPlayer />\r\n            </div> \r\n    );\r\n}\r\n\r\nexport default PlayersBox;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport DartBoardItem from './DartBoardItem/DartBoardItem';\r\nimport PlayersBox from './PlayersBox/PlayersBox';\r\nimport classes from '../DartBoardPlayers/DartBoardPlayer/DartBoardPlayer.module.css';\r\n\r\nconst DartBoardStatic = (props) => {\r\n\r\n    return (\r\n\r\n        <div className=\"Label-style\">\r\n\r\n            <PlayersBox />\r\n\r\n            {props.targets.map((target, i) => (\r\n                <DartBoardItem\r\n                    key={i}\r\n                    target={target.target}\r\n                    isClosed={target.isClosed}\r\n                    labelIndex={i}\r\n                />\r\n            ))}\r\n\r\n            {\r\n                props.players.length > 0 &&\r\n                <>\r\n                    <div className={classes.playerInfo}>\r\n                        Player Info\r\n                    </div>\r\n                    <div className={classes.actions}>\r\n                        Actions\r\n                    </div>\r\n                </>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        players: state.players,\r\n        history: state.history,\r\n        targets: state.targets,\r\n        muted: state.muted\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(DartBoardStatic);","export default __webpack_public_path__ + \"static/media/navigation_transition-right.5d68c198.wav\";","export default __webpack_public_path__ + \"static/media/ui_loading.1e149785.wav\";","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport classes from './DartBoardPlayer/DartBoardPlayerControl/DartBoardPlayerControl.module.css';\r\nimport remove from '../../audioclips/navigation_transition-right.wav';\r\nimport reset from '../../audioclips/ui_loading.wav';\r\nimport { removePlayer } from '../../store/actions/actions';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst TotalScore = (props) => {\r\n\r\n    const removePlayerHandler = () => {\r\n        playSound(removeAudio);\r\n        props.onRemovePlayer(props.playerIndex) && setOpen(false);\r\n    }\r\n\r\n    const resetAudio = new Audio(reset);\r\n    const removeAudio = new Audio(remove);\r\n\r\n    const playSound = audioFile => {\r\n        if (!props.muted) audioFile.play();\r\n    }\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        playSound(resetAudio);\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n\r\n        <div\r\n            className={classes.DartBoardPlayerControl}\r\n        >\r\n\r\n            {props.players.length > 1 &&\r\n                <div style={{ fontSize: '14px' }}>Points: {props.player.points}</div>\r\n            }\r\n            <Tooltip title=\"Remove Player\" placement=\"top\">\r\n                <IconButton onClick={handleClickOpen} aria-label=\"delete\">\r\n                    <RemoveCircleIcon\r\n                        className={classes.removeCircle} />\r\n                </IconButton>\r\n            </Tooltip>\r\n\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{`Remove ${props.player.name} from the game?`}</DialogTitle>\r\n\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"secondary\">\r\n                        No\r\n                    </Button>\r\n                    <Button\r\n                        size=\"small\"\r\n                        onClick={removePlayerHandler}\r\n                        color=\"primary\">\r\n                        Yes\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            {props.players.length > 1 &&\r\n                <div>\r\n                    {`${props.rank}`}\r\n                </div>\r\n            }\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        players: state.players,\r\n        muted: state.muted\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onRemovePlayer: (playerIndex) => dispatch(removePlayer(playerIndex))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TotalScore);\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/notification_simple-01.7f49d7ab.wav\";","export default __webpack_public_path__ + \"static/media/notification_high-intensity.8dec8686.wav\";","export default __webpack_public_path__ + \"static/media/hero_decorative-celebration-01.fd000b5b.wav\";","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nimport classes from './DartBoardPlayerControl.module.css';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\n\r\nimport like from '../../../../audioclips/notification_simple-01.wav';\r\nimport warning from '../../../../audioclips/notification_high-intensity.wav';\r\nimport success from '../../../../audioclips/hero_decorative-celebration-01.wav';\r\n\r\n\r\n\r\nconst DartBoardPlayerControl = (props) => {\r\n\r\n    const updateScoreHandler = () => {\r\n        let hasClosedTarget = false\r\n        let scoreArr = [];\r\n        props.players.forEach(player => {\r\n            scoreArr.push(player.score[props.scoreIndex])\r\n            let total = scoreArr.reduce((a, b) => a + b);\r\n            if (total >= 6) {\r\n                hasClosedTarget = true\r\n            }\r\n        })\r\n        if (props.score > 2 && props.players.length === 1) {\r\n            return alert('Target is Closed')\r\n        }\r\n\r\n        if (props.targets[props.scoreIndex].isClosed === true && props.players.length > 1 && hasClosedTarget === true) {\r\n            return alert('Target is Closed')\r\n        } else {\r\n            props.onUpdatePoints(props.scoreIndex)\r\n            props.onUpdateScore(props.scoreIndex)\r\n        }\r\n    }\r\n\r\n    const likeAudio = new Audio(like);\r\n    const warningAudio = new Audio(warning);\r\n    const successAudio = new Audio(success);\r\n\r\n    const playSound = audioFile => {\r\n        if (props.targets[props.scoreIndex].isClosed === true) return;\r\n        if (!props.muted) audioFile.play();\r\n    }\r\n\r\n    return (\r\n        <div className={classes.DartBoardPlayerControl} onClick={updateScoreHandler}>\r\n            <div>\r\n                {props.score === 0 &&\r\n                    <AddCircleIcon\r\n                        className={classes.circle}\r\n                        onClick={() => playSound(likeAudio)}\r\n                    />\r\n                }\r\n\r\n                {props.score === 1 &&\r\n                    <div className={classes.slash} onClick={() => playSound(warningAudio)}>\r\n                        /\r\n                    </div>}\r\n                {props.score === 2 &&\r\n                    <CloseIcon\r\n                        className={classes.close}\r\n                        onClick={() => playSound(successAudio)}\r\n                        style={{\r\n                            cursor: 'pointer',\r\n                            color: '#FFF',\r\n                            fontSize: '40'\r\n                        }}\r\n                    />}\r\n\r\n                {props.score === 3 &&\r\n                    <HighlightOffIcon\r\n                        className={classes.complete}\r\n                        onClick={() => playSound(likeAudio)}\r\n                        style={{\r\n                            cursor: 'pointer',\r\n                            color: '#FFF',\r\n                            fontSize: '36'\r\n                        }}\r\n                    />}\r\n\r\n                {props.score >= 4 &&\r\n                    <div\r\n                        className={classes.bonusIcon}\r\n                        onClick={() => playSound(likeAudio)}\r\n                        style={{ cursor: 'pointer' }}\r\n                    >\r\n                        🎯\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        muted: state.muted,\r\n        players: state.players,\r\n        targets: state.targets\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(DartBoardPlayerControl);","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { updateScore, updatePoints, undoMove } from '../../../store/actions/actions';\r\nimport TotalScore from '../../DartBoardPlayers/TotalScore';\r\nimport DartBoardPlayerControl from './DartBoardPlayerControl/DartBoardPlayerControl';\r\nimport classes from './DartBoardPlayer.module.css';\r\n\r\nfunction DartBoardPlayer(props) {\r\n    const [rank, setRank] = useState('Rank');\r\n\r\n    const handleUpdateScore = (scoreIndex) => {\r\n        props.onUpdateScore(props.playerIndex, scoreIndex)\r\n    }\r\n\r\n    const handleUpdatePoints = (scoreIndex) => {\r\n        props.onUpdatePoints(props.playerIndex, scoreIndex)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const players = props.players.slice();\r\n        const scores = players.map(player => player.score.reduce((a, b) => a + b));\r\n        const points = players.map(player => player.points)\r\n        const currentPlayerScore = scores[props.playerIndex];\r\n        const currentPlayerPoints = points[props.playerIndex];\r\n        const isZero = (currentValue) => currentValue === 0;\r\n        scores.sort((a, b) => b - a);\r\n        points.sort((a, b) => b - a);\r\n        let rank;\r\n        let i = 0;\r\n        let j = 0;\r\n\r\n        if (points.every(isZero)) {\r\n            while (!rank && i < scores.length) {\r\n                if (currentPlayerScore >= scores[i]) {\r\n                    rank = i + 1;\r\n                }\r\n                i++;\r\n            }\r\n            if (rank === 1) {\r\n                setRank('1st')\r\n            } else if (rank === 2) {\r\n                setRank('2nd')\r\n            } else if (rank === 3) {\r\n                setRank('3rd')\r\n\r\n            } else if (rank === 4) {\r\n                setRank('4th')\r\n\r\n            }\r\n        } else if (points.some(el => el > 0)) {\r\n            while (!rank && j < points.length) {\r\n\r\n                if (currentPlayerPoints >= points[j]) {\r\n                    rank = j + 1;\r\n                }\r\n                j++;\r\n            }\r\n\r\n            if (rank === 1) {\r\n                setRank('1st')\r\n            } else if (rank === 2) {\r\n                setRank('2nd')\r\n            } else if (rank === 3) {\r\n                setRank('3rd')\r\n            } else if (rank === 4) {\r\n                setRank('4th')\r\n            }\r\n\r\n        }\r\n        return rank;\r\n\r\n    }, [props.players, props.playerIndex])\r\n\r\n    return (\r\n        <>\r\n            <div className={\"Player-name\"} style={{ width: '100%' }}>\r\n                <div className={classes.dartBoardPlayer}>\r\n                    <div className={classes.name}\r\n                        style={{ fontSize: props.players.length > 2 ? 27 : 34, }}\r\n                    >\r\n                        {props.player.name}\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    (props.players[props.playerIndex].score).map((num, i) => (\r\n\r\n                        <DartBoardPlayerControl\r\n                            key={i}\r\n                            score={num}\r\n                            scoreIndex={i}\r\n                            totalScore={num}\r\n                            onUpdateScore={handleUpdateScore}\r\n                            onUpdatePoints={handleUpdatePoints}\r\n                        />\r\n                    ))\r\n                }\r\n\r\n                < TotalScore\r\n                    rank={rank}\r\n                    playerIndex={props.playerIndex}\r\n                    player={props.player}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        players: state.players,\r\n        muted: state.muted,\r\n        targets: state.targets\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onUpdateScore: (playerIndex, scoreIndex) => dispatch(updateScore(playerIndex, scoreIndex)),\r\n        onUpdatePoints: (playerIndex, scoreIndex) => dispatch(updatePoints(playerIndex, scoreIndex)),\r\n        onUndoMove: (playerIndex, scoreIndex) => dispatch(undoMove(playerIndex, scoreIndex)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DartBoardPlayer);","import React from 'react'\r\n\r\nfunction Rules() {\r\n    return (\r\n        <div>\r\n            <h3>How to Play</h3>\r\n            <ol>\r\n                <li>Add up to 6 players/teams</li>\r\n                <li>Change the targets you are aiming for or play with the default targets</li>\r\n                <li>The traditional way to play is by points, but you can also just see who hits all the targets first</li>\r\n                <li>You do not have to hit them in order, but that is an option</li>\r\n                <li>If you do play by points, then once you hit 3 targets, the number is open, and hitting that number will score you points</li>\r\n                <li>If all players have hit the target 3 times, then the target becomes closed and no one can collect more points</li>\r\n                <li>If you hit a triple, it's 3 marks. If you hit a double, it's 2 marks.</li>\r\n            </ol>\r\n            <h3>Objective</h3>\r\n            <p>The overall object of Cricket is to have more points than the other team once you have hit all the targets 3 times.</p>\r\n\r\n            <h3>Tips</h3>\r\n            <p>Unless, you decide to play the targets in order, a good strategy is to aim for the bullseye, because if you miss, you may hit another target that you need.</p>\r\n            <p>You will need to decide if you want to try to close out your opponents' numbers or collect more points on your own targets.</p>\r\n\r\n            <h3>Other</h3>\r\n            <p>If you really enjoy this app, please feel free to buy me a cup of coffee. Donations can me made in the bottom-right corner.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rules\r\n","import React, { Component, Fragment } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Rules from './Rules';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\n\r\n\r\nclass RulesSidebar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            right: false,\r\n            item: null,\r\n        };\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ ...this.state, right: false });\r\n    }\r\n\r\n    child = (anchor) => (\r\n        <div\r\n            style={{ width: '350px', padding: '10px 20px' }}\r\n            role=\"presentation\"\r\n        >\r\n            <h2 className='sidebar-title'>Rules</h2>\r\n            <section >\r\n                <Rules />\r\n            </section>\r\n            <DialogActions className='close-button'>\r\n                <Button onClick={this.handleClose} style={{ backgroundColor: 'steelblue', marginTop: '40px', display: 'flex', justifyContent: 'center' }}>\r\n                    Close\r\n                </Button>\r\n\r\n            </DialogActions>\r\n\r\n        </div>\r\n    );\r\n\r\n\r\n    toggleDrawer = (anchor, open) => (event) => {\r\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n\r\n        this.setState({ ...this.state, [anchor]: open });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {['right'].map((anchor) => (\r\n                    <Fragment key={anchor}>\r\n\r\n                        <button\r\n                            className='redButton'\r\n                            onClick={this.toggleDrawer(anchor, true)}\r\n                            style={{\r\n                                cursor: 'pointer'\r\n                            }}>\r\n                            Game<br />Rules\r\n\r\n                        </button>\r\n\r\n\r\n                        <SwipeableDrawer\r\n                            anchor={anchor}\r\n                            open={this.state[anchor]}\r\n                            onClose={this.toggleDrawer(anchor, false)}\r\n                            onOpen={this.toggleDrawer(anchor, true)}\r\n                        >\r\n                            {this.child(anchor)}\r\n                        </SwipeableDrawer>\r\n\r\n                    </Fragment>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RulesSidebar;\r\n","export default __webpack_public_path__ + \"static/media/undo.51f0cedf.wav\";","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport randomize from '../../../audioclips/undo.wav';\r\n\r\nimport { undoMove } from '../../../store/actions/actions';\r\n\r\nconst undoMoves = (props) => {\r\n\r\n    const undoMoveHandler = (scoreIndex) => {\r\n        if (props.history.length === 0) {\r\n            return;\r\n        }\r\n        playSound(randomizeAudio);\r\n        props.onUndoMove(props.playerIndex, scoreIndex)\r\n    }\r\n\r\n    const randomizeAudio = new Audio(randomize);\r\n\r\n    const playSound = audioFile => {\r\n        if (!props.muted) audioFile.play();\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"redButton\"\r\n            onClick={undoMoveHandler}>\r\n            Undo<br></br>Move\r\n        </button>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        history: state.history,\r\n        muted: state.muted\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onUndoMove: (playerIndex, scoreIndex) => dispatch(undoMove(playerIndex, scoreIndex))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(undoMoves);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { resetBoard } from '../../../store/actions/actions';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport reset from '../../../audioclips/ui_loading.wav';\r\n\r\n\r\n\r\nconst ResetBoard = (props) => {\r\n\r\n    const resetBoardHandler = () => {\r\n        props.onResetBoard() && setOpen(false);\r\n    }\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        playSound(resetAudio);\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    const resetAudio = new Audio(reset);\r\n\r\n    const playSound = audioFile => {\r\n        if (!props.muted) audioFile.play();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button\r\n                className=\"redButton\"\r\n                onClick={handleClickOpen}\r\n            >\r\n                New<br></br>Game\r\n            </button>\r\n\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n            >\r\n                <DialogTitle\r\n                    className=\"modalStyle\"\r\n                    id=\"alert-dialog-title\">{\"Are you sure you want to reset the targets and scores?\"}\r\n                </DialogTitle>\r\n\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"secondary\">\r\n                        No\r\n                    </Button>\r\n                    <Button\r\n                        size=\"small\"\r\n                        onClick={resetBoardHandler}\r\n                        color=\"primary\"\r\n                    >\r\n                        Yes\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        players: state.players,\r\n        muted: state.muted\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onResetBoard: () => dispatch(resetBoard()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResetBoard);","export default __webpack_public_path__ + \"static/media/randomize.606f0748.wav\";","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { randomizePlayersOrder, randomizeLabels } from '../../store/actions/actions';\r\nimport Rules from '../../components/RulesSidebar'\r\nimport Button from '@material-ui/core/Button';\r\nimport UndoMove from '../NavBar/NavButtons/UndoMove';\r\nimport ResetBoard from '../NavBar/NavButtons/ResetBoard';\r\nimport randomize from '../../audioclips/randomize.wav';\r\nimport reset from '../../audioclips/randomize.wav';\r\nimport classes from './DartBoardPlayers.module.css';\r\nimport { useEffect } from 'react';\r\n\r\n\r\n\r\nfunction DartActions(props) {\r\n    const [canRandomize, setCanRandomize] = useState(true)\r\n\r\n    const randomizePlayersHandler = () => {\r\n\r\n        playSound(randomizeAudio);\r\n        props.onRandomizePlayers();\r\n    }\r\n\r\n    useEffect(() => {\r\n        setCanRandomize(true);\r\n        props.players.forEach((player) => {\r\n            let total = player.score.reduce((a, b) => a + b);\r\n            if (total > 0) {\r\n                setCanRandomize(false)\r\n            }\r\n        }, [props.players]);\r\n\r\n    })\r\n\r\n    const randomizeLabelHandler = () => {\r\n        if (canRandomize === true) {\r\n            playSound(resetAudio);\r\n            props.onRandomizeLabels();\r\n        } else if (canRandomize === false) {\r\n            return alert('The game has already started so you can not randomize the targets')\r\n        }\r\n    }\r\n\r\n    const randomizeAudio = new Audio(randomize);\r\n    const resetAudio = new Audio(reset);\r\n\r\n\r\n    const playSound = audioFile => {\r\n        if (!props.muted) audioFile.play();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {props.players.length > 0 && <div className={classes.randomizePlayers}>\r\n                <UndoMove />\r\n                <div className={classes.randomizeTargets}>\r\n                    <button\r\n                        className={classes.randomizeButton}\r\n                        onClick={randomizeLabelHandler}>\r\n                        Randomize<br></br>Targets\r\n                    </button>\r\n                </div>\r\n                <span\r\n                    className={classes.reset}\r\n                >\r\n                    <ResetBoard />\r\n                </span>\r\n                <button\r\n                    className={classes.randomizeButton}\r\n                    onClick={randomizePlayersHandler}\r\n                >\r\n                    Randomize<br></br>Players\r\n                </button>\r\n                <Rules />\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        players: state.players,\r\n        history: state.history,\r\n        muted: state.muted\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onRandomizePlayers: () => dispatch(randomizePlayersOrder()),\r\n        onRandomizeLabels: () => dispatch(randomizeLabels())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DartActions);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport DartBoardPlayer from './DartBoardPlayer/DartBoardPlayer';\r\nimport DartActions from './DartActions'\r\nimport classes from './DartBoardPlayers.module.css';\r\n\r\nconst dartBoardPlayers = (props) => {\r\n    return (\r\n        <>\r\n            <div className={classes.dartBoardPlayers}>\r\n                {props.players.map((player, i) => (\r\n                    <DartBoardPlayer\r\n                        player={player}\r\n                        playerIndex={i}\r\n                        key={i}\r\n                    />\r\n                ))}\r\n            </div>\r\n\r\n            <DartActions />\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        players: state.players,\r\n        history: state.history,\r\n        muted: state.muted\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(dartBoardPlayers);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Grid } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport DartBoardStatic from '../components/DartBoardStatic/DartBoardStatic';\r\nimport DartBoardPlayers from '../components/DartBoardPlayers/DartBoardPlayers';\r\n\r\nconst styles = {\r\n    root: {\r\n        backgroundColor: '#000',\r\n        color: '#FFF',\r\n        border: '6px double #00fff8de',\r\n        padding: '5px',\r\n        boxShadow: '0 0 12px 12px rgba(63, 156, 175, 0.928)'\r\n    }\r\n}\r\n\r\nconst dartBoard = (props) => {\r\n    const { classes } = props;\r\n    let p = props.players.length\r\n    return (\r\n\r\n        <div style={{ margin: 'auto', width: p === 0 ? '30%' : '90%' }}>\r\n            <Grid className={classes.root} item xs={12}>\r\n                <Grid container spacing={0}>\r\n                    <Grid item xs={p === 0 ? 12 : 3} >\r\n                        <DartBoardStatic />\r\n                    </Grid>\r\n                    <Grid item xs={9}>\r\n                        <DartBoardPlayers />\r\n                    </Grid>\r\n                    <Button\r\n                        style={{\r\n                            backgroundColor: '#00fff8de',\r\n                            transition: 'transform .4s',\r\n                            position: 'absolute',\r\n                            opacity: '.9',\r\n                            bottom: '10px',\r\n                            right: '10px'\r\n                        }}\r\n                    >\r\n                        <a\r\n                            className='iconHover'\r\n                            style={{\r\n                                textDecoration: 'none',\r\n                                color: 'black', fontSize: '11px',\r\n                                fontFamily: 'Audiowide',\r\n                            }}\r\n                            href=\"https://paypal.me/michaelrooze?locale.x=en_US\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            $ Donate\r\n                        </a>\r\n                    </Button >\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        players: state.players\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(dartBoard));","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { toggleMute } from '../../store/actions/actions';\r\nimport classes from './Checkbox.module.css';\r\n\r\nconst Checkbox = (props) => {\r\n\r\n    const toggleMuteHandler = () => {\r\n        props.onToggleMute();\r\n    }\r\n\r\n    return (\r\n        <div className={classes.checkbox} >\r\n            <input\r\n                name=\"Mute\"\r\n                type=\"checkbox\"\r\n                onChange={toggleMuteHandler}\r\n                checked={props.muted}\r\n            />\r\n            {props.muted ?\r\n                <label>UNMUTE SFX</label> :\r\n                <label>MUTE SFX</label>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { muted: state.muted }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return { onToggleMute: () => dispatch(toggleMute()) }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkbox);\r\n","import React from 'react';\r\nimport { MuiThemeProvider, createTheme, StylesProvider } from '@material-ui/core/styles';\r\nimport Header from './containers/Header';\r\nimport DartBoard from './containers/DartBoard';\r\nimport Checkbox from './components/Checkbox/Checkbox';\r\nimport classes from './App.module.css';\r\n\r\nconst theme = createTheme({\r\n\r\n  palette: {\r\n    primary: {\r\n      light: '01579b',\r\n      main: '#424242',\r\n      dark: '#4682b4',\r\n      contrastText: '#FFF'\r\n    },\r\n    secondary: {\r\n      light: 'rgb(255 0 0 / 87%)',\r\n      main: '#212121',\r\n      dark: 'rgb(255 0 0 / 87%)',\r\n      contrastText: '#FFF'\r\n    }\r\n  },\r\n  typography: {\r\n    useNextVariants: true,\r\n  }\r\n});\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <StylesProvider injectFirst>\r\n      <MuiThemeProvider theme={theme}>\r\n        <Header />\r\n        <div className={classes.DartBoardContainer}>\r\n          <DartBoard />\r\n        </div>\r\n        <Checkbox />\r\n      </MuiThemeProvider>\r\n    </StylesProvider>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    players: [],\r\n    history: [],\r\n    pointsHistory: [],\r\n    winningPlayerIndex: -1,\r\n    muted: true,\r\n    targets: [\r\n        { target: 15, isClosed: false },\r\n        { target: 16, isClosed: false },\r\n        { target: 17, isClosed: false },\r\n        { target: 18, isClosed: false },\r\n        { target: 19, isClosed: false },\r\n        { target: 20, isClosed: false },\r\n        { target: 25, isClosed: false }\r\n    ]\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    let player;\r\n    let players;\r\n    let record;\r\n    let targets;\r\n    let map;\r\n\r\n    switch (action.type) {\r\n\r\n        case actionTypes.TOGGLE_MUTE:\r\n            return {\r\n                ...state,\r\n                muted: !state.muted\r\n            }\r\n\r\n        case actionTypes.RANDOMIZE_PLAYERS_ORDER:\r\n\r\n            map = {};\r\n            let max = state.players.length;\r\n            let min = 0;\r\n            // let currentOrder = state.players.map((_, i) => i);\r\n            let randomOrder = state.players.map(() => {\r\n                let num = Math.floor(Math.random() * (max - min) + min);\r\n                while (map[num]) {\r\n                    num = Math.floor(Math.random() * (max - min) + min);\r\n                }\r\n                map[num] = true;\r\n                return num;\r\n            });\r\n            // if (currentOrder[0] === randomOrder[0]) { randomOrder.reverse(); }\r\n            const shuffledPlayers = state.players.map(() => null);\r\n            state.players.forEach((player, i) => {\r\n                const newIndex = randomOrder[i];\r\n                shuffledPlayers[newIndex] = player;\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                players: shuffledPlayers\r\n            }\r\n\r\n        // case actionTypes.RANDOMIZE_LABELS:\r\n        //     map = {};\r\n        //     targets = state.targets.map(label => {\r\n        //         let num = label.target;\r\n        //         num = Math.floor(Math.random() * (60 - 1) + 1);\r\n        //         while (map[num]) {\r\n        //             num = Math.floor(Math.random() * (60 - 1) + 1);\r\n        //         }\r\n        //         map[num] = num;\r\n        //         return { target: num, isClosed: false };\r\n        //     }).sort((a, b) => b - a);\r\n\r\n        //     return {\r\n        //         ...state,\r\n        //         targets\r\n        //     }\r\n\r\n        case actionTypes.RANDOMIZE_LABELS:\r\n\r\n            function generateRandom(min, max, exclude) {\r\n                let random;\r\n                while (!random) {\r\n                    const x = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                    if (exclude.indexOf(x) === -1) random = x;\r\n                }\r\n                return random;\r\n            }\r\n\r\n            targets = state.targets.map(target => {\r\n                let newTarget;\r\n                let finalArr = [];\r\n                for (let i = 0; i < 7; i++) {\r\n                    // The third argument in generateRandom are all the values of a single shot in darts that you can not get. \r\n                    // For example, you can hit a triple 20 which is equal to 60, but there is no shot that will equal 59.\r\n                    newTarget = generateRandom(1, 60, [59, 58, 56, 55, 53, 52, 49, 47, 46, 44, 43, 41, 37, 35, 31, 29, 23]);\r\n                    finalArr.push(newTarget)\r\n\r\n                }\r\n\r\n                let num = target.target;\r\n                num = newTarget\r\n                // console.log(newTarget)\r\n                return { target: num, isClosed: false }\r\n            })\r\n\r\n            return {\r\n                ...state,\r\n                targets\r\n            }\r\n\r\n        case actionTypes.MODIFY_LABELS:\r\n\r\n            let label = state.targets[action.labelIndex].target;\r\n\r\n            if (action.operation === 'decrement' && label === 1) {\r\n                label = 20;\r\n            } else if (action.operation === 'increment' && label === 20) {\r\n                label = 1;\r\n            } else {\r\n                label = action.operation === 'decrement' ? label - 1 : label + 1;\r\n            }\r\n            targets = state.targets.map((el, i) => i === action.labelIndex ?\r\n                ({ target: label, isClosed: false }) :\r\n                ({ target: el.target, isClosed: false }));\r\n\r\n            return {\r\n                ...state,\r\n                targets\r\n            }\r\n\r\n        case actionTypes.ADD_PLAYER:\r\n            player = {\r\n                name: action.name,\r\n                score: [0, 0, 0, 0, 0, 0, 0],\r\n                points: 0\r\n            }\r\n            players = [...state.players, player]\r\n            return {\r\n                ...state,\r\n                players,\r\n                targets: [\r\n                    { target: 15, isClosed: false },\r\n                    { target: 16, isClosed: false },\r\n                    { target: 17, isClosed: false },\r\n                    { target: 18, isClosed: false },\r\n                    { target: 19, isClosed: false },\r\n                    { target: 20, isClosed: false },\r\n                    { target: 25, isClosed: false }\r\n                ]\r\n            }\r\n\r\n        case actionTypes.REMOVE_PLAYER:\r\n            players = state.players.filter((_, i) => i !== action.playerIndex);\r\n            return {\r\n                ...state,\r\n                players\r\n            }\r\n\r\n        case actionTypes.UPDATE_SCORE:\r\n            player = state.players[action.playerIndex];\r\n            player.score[action.scoreIndex]++;\r\n            let maxNum = state.players.length;\r\n            let indexArr = []\r\n\r\n            state.players.map((player) => {\r\n                player.score.forEach((target, i) => {\r\n                    if (target >= 3) {\r\n                        indexArr.push(i);\r\n                    }\r\n                })\r\n            })\r\n\r\n            let finalArr = [];\r\n\r\n            function getOccurrence(array, value) {\r\n                let count = 0;\r\n                array.forEach((v) => (v === value && ++count));\r\n                if (count === maxNum) {\r\n                    finalArr.push(value)\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i <= 6; i++) {\r\n                getOccurrence(indexArr, i)\r\n            }\r\n\r\n            targets = state.targets;\r\n\r\n            if (finalArr.length !== 0 && player.score[action.scoreIndex] >= 3) {\r\n                finalArr.forEach(val => {\r\n                    targets[val].isClosed = true;\r\n                })\r\n            }\r\n\r\n\r\n            let winningPlayerIndex = -1;\r\n            let playerHasScored = false;\r\n            let allPlayersPointsArr = [];\r\n\r\n            state.players.forEach(player => {\r\n                player.score.forEach(hit => {\r\n                    if (hit > 3) {\r\n                        allPlayersPointsArr.push(player.points)\r\n                        allPlayersPointsArr.sort((a, b) => b - a);\r\n                        playerHasScored = true;\r\n                    }\r\n                })\r\n            })\r\n\r\n            if (playerHasScored === true && player.score.every(el => el >= 3) && player.points === allPlayersPointsArr[0]) {\r\n                winningPlayerIndex = action.playerIndex;\r\n            }\r\n\r\n            if (playerHasScored === false) {\r\n                if (player.score.every(el => el >= 3)) {\r\n                    winningPlayerIndex = action.playerIndex;\r\n                }\r\n            }\r\n\r\n            players = state.players.slice();\r\n            record = {\r\n                playerIndex: action.playerIndex,\r\n                scoreIndex: action.scoreIndex\r\n            };\r\n            return {\r\n                ...state,\r\n                players,\r\n                history: [...state.history, record],\r\n                winningPlayerIndex,\r\n            }\r\n\r\n        case actionTypes.UPDATE_POINTS:\r\n            targets = state.targets;\r\n            player = state.players[action.playerIndex];\r\n\r\n            if (player.score[action.scoreIndex] >= 3) {\r\n                player.points += targets[action.scoreIndex].target\r\n                players = state.players.slice();\r\n                record = {\r\n                    playerIndex: action.playerIndex,\r\n                    scoreIndex: action.scoreIndex\r\n                };\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                pointsHistory: [...state.pointsHistory, record],\r\n            }\r\n\r\n        case actionTypes.RESET_SCORES:\r\n            players = state.players.map(player => {\r\n                player.score = [0, 0, 0, 0, 0, 0, 0];\r\n                player.points = 0;\r\n                return player;\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                players,\r\n                winningPlayerIndex: -1,\r\n                history: [],\r\n            }\r\n\r\n        case actionTypes.UNDO_MOVE:\r\n            if (state.winningPlayerIndex > -1) {\r\n                state.winningPlayerIndex = -1;\r\n            }\r\n            if (state.history.length === 0) { return; }\r\n            if (state.pointsHistory.length === 0) { return; }\r\n            record = state.history.pop();\r\n            let pointsRecord = state.pointsHistory.pop();\r\n            let target = state.players[record.playerIndex].score[record.scoreIndex];\r\n            if (target > 0) {\r\n                state.players[record.playerIndex].score[record.scoreIndex]--;\r\n            }\r\n            if (pointsRecord) {\r\n                player = state.players[pointsRecord.playerIndex];\r\n                let lastTarget = state.targets[pointsRecord.scoreIndex];\r\n                let pointTotal = player.points - lastTarget.target;\r\n                player.points = pointTotal;\r\n            }\r\n\r\n\r\n            if (state.players[record.playerIndex].score[record.scoreIndex] < 3) {\r\n                state.targets[record.scoreIndex].isClosed = false;\r\n            }\r\n            players = state.players.slice();\r\n            return {\r\n                ...state,\r\n                players\r\n            }\r\n        case actionTypes.RESET_BOARD:\r\n            players = state.players.map(player => {\r\n                player.score = [0, 0, 0, 0, 0, 0, 0];\r\n                player.totalScore = 0;\r\n                player.points = 0;\r\n                return player;\r\n            });\r\n            return {\r\n                ...state,\r\n                players,\r\n                winningPlayerIndex: -1,\r\n                targets: [\r\n                    { target: 15, isClosed: false },\r\n                    { target: 16, isClosed: false },\r\n                    { target: 17, isClosed: false },\r\n                    { target: 18, isClosed: false },\r\n                    { target: 19, isClosed: false },\r\n                    { target: 20, isClosed: false },\r\n                    { target: 25, isClosed: false }\r\n                ]\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport dartBoardReducer from './store/reducers/dartBoard';\n\nimport './styles/Header.scss';\nimport './styles/button.scss';\nimport './styles/base_styles.scss';\nimport './styles/index.scss';\nimport './styles/label_styles.scss';\nimport './styles/Nav.scss';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(dartBoardReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n);\n\nrender(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DartBoardPlayerControl\":\"DartBoardPlayerControl_DartBoardPlayerControl__2tYoQ\",\"slideDown\":\"DartBoardPlayerControl_slideDown__1Obrn\",\"removeCircle\":\"DartBoardPlayerControl_removeCircle__3QaTz\",\"Total\":\"DartBoardPlayerControl_Total__1Hisa\",\"circle\":\"DartBoardPlayerControl_circle__2yDz2\",\"complete\":\"DartBoardPlayerControl_complete__3wvH6\",\"bonusIcon\":\"DartBoardPlayerControl_bonusIcon__2ch14\",\"close\":\"DartBoardPlayerControl_close__TR3Tj\",\"slash\":\"DartBoardPlayerControl_slash__3pV6u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dartBoardPlayers\":\"DartBoardPlayers_dartBoardPlayers__3DlUw\",\"randomizePlayers\":\"DartBoardPlayers_randomizePlayers__3pwMF\",\"randomizeButton\":\"DartBoardPlayers_randomizeButton__1zlIS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dartBoardPlayer\":\"DartBoardPlayer_dartBoardPlayer__11KGv\",\"resetGame\":\"DartBoardPlayer_resetGame__1koOn\",\"playerInfo\":\"DartBoardPlayer_playerInfo__1Ilb6\",\"slideIn\":\"DartBoardPlayer_slideIn__2sjsp\",\"actions\":\"DartBoardPlayer_actions__2l0Pt\",\"randomizeTargets\":\"DartBoardPlayer_randomizeTargets__1j5Ib\",\"name\":\"DartBoardPlayer_name__3kdEo\",\"removePlayer\":\"DartBoardPlayer_removePlayer__2rWGb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DartBoardItem\":\"DartBoardItem_DartBoardItem__1PGbF\",\"targetClosed\":\"DartBoardItem_targetClosed__36GSs\",\"numbers\":\"DartBoardItem_numbers__3VB-b\"};"],"sourceRoot":""}